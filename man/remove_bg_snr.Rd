% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/remove_bg_snr.R
\name{remove_bg_snr}
\alias{remove_bg_snr}
\alias{remove_bg_snr,matrix,matrix,vector,character,vector,character-method}
\alias{remove_bg_snr,matrix,DGEList,vector,character,character,character-method}
\alias{remove_bg_snr,DGEList,ANY,character,character,vector,character-method}
\alias{remove_bg_snr,ExpressionSet,ANY,character,character,vector,character-method}
\alias{remove_bg_snr,SummarizedExperiment,ANY,character,character,vector,character-method}
\alias{remove_bg_snr,Seurat,ANY,character,character,vector,character-method}
\alias{remove_bg_snr,character,ANY,vector,character,vector,character-method}
\alias{remove_bg_snr,missing,ANY,vector,character,vector,character-method}
\alias{remove_bg_snr,ANY,ANY,vector,character,vector,character-method}
\title{Remove markers with background noise.}
\usage{
remove_bg_snr(
  bg_data = "CCLE",
  sig_data,
  b_group_col,
  b_target_group,
  s_group_col,
  s_target_group,
  markers,
  snr = 1,
  ...,
  filter = NULL,
  gene_id = "SYMBOL",
  b_slot = "counts",
  s_slot = "counts",
  ccle_tpm = NULL,
  ccle_meta = NULL
)

\S4method{remove_bg_snr}{matrix,matrix,vector,character,vector,character}(
  bg_data = "CCLE",
  sig_data,
  b_group_col,
  b_target_group,
  s_group_col,
  s_target_group,
  markers,
  snr = 1,
  ...,
  filter = NULL,
  gene_id = "SYMBOL",
  b_slot = "counts",
  s_slot = "counts",
  ccle_tpm = NULL,
  ccle_meta = NULL
)

\S4method{remove_bg_snr}{matrix,DGEList,vector,character,character,character}(
  bg_data = "CCLE",
  sig_data,
  b_group_col,
  b_target_group,
  s_group_col,
  s_target_group,
  markers,
  snr = 1,
  ...,
  filter = NULL,
  gene_id = "SYMBOL",
  b_slot = "counts",
  s_slot = "counts",
  ccle_tpm = NULL,
  ccle_meta = NULL
)

\S4method{remove_bg_snr}{DGEList,ANY,character,character,vector,character}(
  bg_data = "CCLE",
  sig_data,
  b_group_col,
  b_target_group,
  s_group_col,
  s_target_group,
  markers,
  snr = 1,
  ...,
  filter = NULL,
  gene_id = "SYMBOL",
  b_slot = "counts",
  s_slot = "counts",
  ccle_tpm = NULL,
  ccle_meta = NULL
)

\S4method{remove_bg_snr}{ExpressionSet,ANY,character,character,vector,character}(
  bg_data = "CCLE",
  sig_data,
  b_group_col,
  b_target_group,
  s_group_col,
  s_target_group,
  markers,
  snr = 1,
  ...,
  filter = NULL,
  gene_id = "SYMBOL",
  b_slot = "counts",
  s_slot = "counts",
  ccle_tpm = NULL,
  ccle_meta = NULL
)

\S4method{remove_bg_snr}{SummarizedExperiment,ANY,character,character,vector,character}(
  bg_data = "CCLE",
  sig_data,
  b_group_col,
  b_target_group,
  s_group_col,
  s_target_group,
  markers,
  snr = 1,
  ...,
  filter = NULL,
  gene_id = "SYMBOL",
  b_slot = "counts",
  s_slot = "counts",
  ccle_tpm = NULL,
  ccle_meta = NULL
)

\S4method{remove_bg_snr}{Seurat,ANY,character,character,vector,character}(
  bg_data = "CCLE",
  sig_data,
  b_group_col,
  b_target_group,
  s_group_col,
  s_target_group,
  markers,
  snr = 1,
  ...,
  filter = NULL,
  gene_id = "SYMBOL",
  b_slot = "counts",
  s_slot = "counts",
  ccle_tpm = NULL,
  ccle_meta = NULL
)

\S4method{remove_bg_snr}{character,ANY,vector,character,vector,character}(
  bg_data = "CCLE",
  sig_data,
  b_group_col,
  b_target_group,
  s_group_col,
  s_target_group,
  markers,
  snr = 1,
  ...,
  filter = NULL,
  gene_id = "SYMBOL",
  b_slot = "counts",
  s_slot = "counts",
  ccle_tpm = NULL,
  ccle_meta = NULL
)

\S4method{remove_bg_snr}{missing,ANY,vector,character,vector,character}(
  bg_data = "CCLE",
  sig_data,
  b_group_col,
  b_target_group,
  s_group_col,
  s_target_group,
  markers,
  snr = 1,
  ...,
  filter = NULL,
  gene_id = "SYMBOL",
  b_slot = "counts",
  s_slot = "counts",
  ccle_tpm = NULL,
  ccle_meta = NULL
)

\S4method{remove_bg_snr}{ANY,ANY,vector,character,vector,character}(
  bg_data = "CCLE",
  sig_data,
  b_group_col,
  b_target_group,
  s_group_col,
  s_target_group,
  markers,
  snr = 1,
  ...,
  filter = NULL,
  gene_id = "SYMBOL",
  b_slot = "counts",
  s_slot = "counts",
  ccle_tpm = NULL,
  ccle_meta = NULL
)
}
\arguments{
\item{bg_data}{'CCLE' or expression object as background data}

\item{sig_data}{expression object, can be matrix or DGEList, as signal data}

\item{b_group_col}{vector or character, to specify the group of background
target_groups, or column name of \code{\link[depmap:metadata]{depmap::depmap_metadata()}},
e.g. 'primary_disease'}

\item{b_target_group}{pattern, specify the target_group of interest in bg_data,
e.g. 'colorectal'}

\item{s_group_col}{vector or character, to specify the group of signal
target_groups, or column name of group}

\item{s_target_group}{pattern, specify the target group of interest in sig_data}

\item{markers}{vector, a vector of gene names, listed the gene symbols to be
filtered. Must be gene SYMBOLs.}

\item{snr}{num, the cutoff of SNR to screen markers which are not or lowly
expressed in bg_data}

\item{...}{params for \code{\link[=grep]{grep()}} to find matched cell lines in bg_data}

\item{filter}{NULL or a vector of 2 num, filter condition to remove low
expression genes in bg_data, the 1st for logcounts,
the 2nd for samples size}

\item{gene_id}{character, specify the gene ID type of rownames of expression
data, could be one of 'ENSEMBL', 'SYMBOL', 'ENTREZ'...,
default 'SYMBOL'}

\item{b_slot}{character, specify which slot to use of DGEList, sce or seurat
object for bg_data, optional, default 'counts'}

\item{s_slot}{character, specify which slot to use of DGEList, sce or seurat
object for sig_data, optional, default 'counts'}

\item{ccle_tpm}{ccle_tpm data from \code{\link[depmap:TPM]{depmap::depmap_TPM()}}, only used when
data = 'CCLE', default NULL}

\item{ccle_meta}{ccle_meta data from \code{\link[depmap:metadata]{depmap::depmap_metadata()}}, only used
when data = 'CCLE', default NULL}
}
\value{
a vector of gene symbols
}
\description{
Specify signatures against specific tissues or cell lines,
and generate CCLE_tpm_new after retrieving specific tissues.
}
\examples{
data("NK_markers", "ccle_crc_5")
remove_bg_snr(ccle_crc_5, Biobase::exprs(im_data_6),
              "cancer", "CRC", ## for bg_data
              im_data_6$`celltype:ch1`, "NK", ## for sig_data
              markers = NK_markers$HGNC_Symbol[30:40],
              gene_id = c("SYMBOL", "ENSEMBL"))

}
